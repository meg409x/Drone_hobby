#OUTPUT -THERMAL AND OG
import cv2
import numpy as np

img = cv2.imread(r'C:\Users\MEGHA M NAIR\bookpage.jpg')
# not using retval for now
#its a low light image
# if image is more than 12 pixels, then it is converted to white, 
#if not ,converted to black 
retval, threshold = cv2.threshold(img, 12, 255, cv2.THRESH_BINARY)

cv2.imshow('original', img)
cv2.imshow('threshold', threshold)
cv2.waitkey(0)
cv2.destroyAllWindows()
-------------------------------------------------------------------
#OUTPUT -3 IMAGES
import cv2
import numpy as np

img = cv2.imread(r'C:\Users\MEGHA M NAIR\bookpage.jpg')
# not using retval for now
#its a low light image
# if image is more than 12 pixels, then it is converted to white, 
#if not ,converted to black 
retval, threshold = cv2.threshold(img, 12, 255, cv2.THRESH_BINARY)
#Grayscaling
grayscale= cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
#applying to grayscale
retval2, threshold2 = cv2.threshold(grayscale, 12, 255, cv2.THRESH_BINARY)
cv2.imshow('original', img)
cv2.imshow('threshold', threshold)
cv2.imshow('threshold2', threshold2)
cv2.waitkey(0)
cv2.destroyAllWindows()
 
 ----------------------------------------------------------------------
#GAUSSIAN ADAPTIVE THRESHOLD- 4 IMAGAE OUTPUT-one is B/W WITHOUT 
LOSS OF WORDS AS IN CLEARER TO READ-DESIRABLE
import cv2
import numpy as np

img = cv2.imread(r'C:\Users\MEGHA M NAIR\bookpage.jpg')
# not using retval for now
#its a low light image
# if image is more than 12 pixels, then it is converted to white, 
#if not ,converted to black 
retval, threshold = cv2.threshold(img, 12, 255, cv2.THRESH_BINARY)
grayscale= cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
retval2, threshold2 = cv2.threshold(grayscale, 12, 255, cv2.THRESH_BINARY)
#adaptive thresholding
#255 is the max value
#make it binary 
gaus= cv2.adaptiveThreshold(grayscale,255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 115, 1)
cv2.imshow('original', img)
cv2.imshow('threshold', threshold)
cv2.imshow('threshold2', threshold2)
cv2.imshow('gaus', gaus)
cv2.waitkey(0)
cv2.destroyAllWindows()
------------------------------------------------------------------------
#OTSU's METHOD OF THRESHOLDING
#5 IMAGE OUTPUT
import cv2
import numpy as np

img = cv2.imread(r'C:\Users\MEGHA M NAIR\bookpage.jpg')
# not using retval for now
#its a low light image
# if image is more than 12 pixels, then it is converted to white, 
#if not ,converted to black 
retval, threshold = cv2.threshold(img, 12, 255, cv2.THRESH_BINARY)
grayscale= cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
retval2, threshold2 = cv2.threshold(grayscale, 12, 255, cv2.THRESH_BINARY)
gaus= cv2.adaptiveThreshold(grayscale,255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 115, 1)
#otsu thresholding- used in multiple machine learning classifiers
retval2,otsu = cv2.threshold(grayscale , 125, 255, cv2.THRESH_BINARY+cv2.THRESH_OTSU)

cv2.imshow('original', img)
cv2.imshow('threshold', threshold)
cv2.imshow('threshold2', threshold2)
cv2.imshow('gaus', gaus)
cv2.imshow('otsu', otsu)
