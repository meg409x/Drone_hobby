SMOOTHED
import cv2
import numpy as np

cap= cv2.VideoCapture(0)

while True:
    _, frame = cap.read()
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    
    #hsv is hue sat value 
    lower_red= np.array([160,100,110])
    upper_red= np.array([255,255,255])

    mask= cv2.inRange(hsv, lower_red, upper_red)
    res= cv2.bitwise_and(frame, frame, mask = mask)

    kernel= np.ones((15,15), np.float32)/225
    smoothed= cv2.filter2D(res, -1, kernel)
    
    
    cv2.imshow('frame', frame)
    cv2.imshow('mask', mask)
    cv2.imshow('smoothed', smoothed)
    
    
    k= cv2.waitKey(5)& 0xFF
    if k== 27:
        break
cv2.destroyAllWindows()
cap.release()
--------------------------------------------------------------
MEDIAN 
import cv2
import numpy as np

cap= cv2.VideoCapture(0)

while True:
    _, frame = cap.read()
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    
    #hsv is hue sat value 
    lower_red= np.array([160,100,110])
    upper_red= np.array([255,255,255])

    mask= cv2.inRange(hsv, lower_red, upper_red)
    res= cv2.bitwise_and(frame, frame, mask = mask)

    kernel= np.ones((15,15), np.float32)/225
    smoothed= cv2.filter2D(res, -1, kernel)
    
    blur= cv2.GaussianBlur(res, (15,15), 0)
    median = cv2.medianBlur(res, 25)
    cv2.imshow('frame', frame)
    cv2.imshow('mask', mask)
    cv2.imshow('res',res )
    cv2.imshow('smoothed', smoothed)
    cv2.imshow('blur', blur)
    cv2.imshow('median', median)
    
    k= cv2.waitKey(5)& 0xFF
    if k== 27:
        break
cv2.destroyAllWindows()
cap.release()

--------------------------------------------------------------------------
BILATERAL
import cv2
import numpy as np

cap= cv2.VideoCapture(0)

while True:
    _, frame = cap.read()
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    
    #hsv is hue sat value 
    lower_red= np.array([160,100,110])
    upper_red= np.array([255,255,255])

    mask= cv2.inRange(hsv, lower_red, upper_red)
    res= cv2.bitwise_and(frame, frame, mask = mask)
#Simple smoothening
#data type np.float32 is divided by 15x15 pixels
#15 x 15 square, which means we have 225 total pixels
    kernel= np.ones((15,15), np.float32)/225
#Bilateral blur
    smoothed= cv2.filter2D(res, -1, kernel)
#res is result
    bilateral= cv2.bilateralFilter(res, 15, 75, 75)
#Gaussian Blurring
    blur= cv2.GaussianBlur(res, (15,15), 0)
#median is by far the best smoothening function 
    median = cv2.medianBlur(res, 25)
    #show commands
    cv2.imshow('frame', frame)
    cv2.imshow('mask', mask)
    cv2.imshow('res',res )
    cv2.imshow('smoothed', smoothed)
    cv2.imshow('blur', blur)
    cv2.imshow('median', median)
    cv2.imshow('bilateral', bilateral)
    
    k= cv2.waitKey(5)& 0xFF
    if k== 27:
        break
cv2.destroyAllWindows()
cap.release()
